<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shopping">
<!-- 카트 정보 -->
	<insert id="addCart">
		insert into cart(id, num, volume) values(#{id},#{num},#{volume})
	</insert>
	<select id="getCartList" resultType="java.util.HashMap">
		select cs.*,p.imag from (select c.*,s.type,s.name,s.scale,s.color,s.price,s.ownernumber,s.comp,s.subname from (select * from cart where id=#{id}) c 
		left join stock s on c.num = s.no) cs left join product p on cs.ownernumber = p.ownernumber
	</select>
	<delete id="deleteCart">
		delete from cart where id=#{id} and num=#{num}
	</delete>
	<select id="checkCart" resultType="java.lang.Integer">
		select count(*) from cart where num=#{num} and id=#{id}
	</select>
	<update id="addCartVol">
		update cart set volume=(select volume from cart where num=#{num})+#{volume} where num=#{num}
	</update>
	<select id="getCartCnt" resultType="java.lang.Integer">
		select count(*) from cart where id=#{id}
	</select>
<!-- 구매테이블 -->
	<!-- purchase정보 추가 -->
	<insert id="addPurchase">
		insert into purchase(purchaseno,id,name,postcode,addr1,addr2,tel,orderdate) 
		values
        (#{purchaseNo},#{id},#{name},#{postcode},#{addr1},#{addr2},#{tel},sysdate)
	</insert>
	<!-- orderInfo -->
	<insert id="addOrderInfo">
		insert into orderinfo values
		 (orderinfo_seq.nextval,#{purchaseNo},#{ownernumber},#{stockNo},#{stockCnt},#{stockPrice},#{return,jdbcType=VARCHAR})
	</insert>
	<!-- 결제정보 테이블 -->
	<insert id="addPayment">
	insert into payment (paymentno,id,purchaseno,type,kind,installment,totprice,delivery,pointpay,coupon,payment,paymentdate)
	values
	(payment_seq.nextval,#{id},#{purchaseNo},#{type},#{kind},#{installment,jdbcType=NUMERIC},#{totPrice},
	#{delivery},#{payPoint,jdbcType=NUMERIC},#{coupon,jdbcType=NUMERIC},#{payment},sysdate)
	</insert>
	
	<!-- 회원 정보&쿠폰&최근결제정뵤 가져오기-->
	<select id="getMemInfo" resultType="java.util.HashMap">
		select * from detail where id=#{id}
	</select>
	<select id="getCoupon" resultType="java.util.HashMap">
		select * from coupon where id=#{id} and (enddate >= sysdate)
	</select>
	<select id="getRecentPurchase" resultType="java.util.HashMap">
		select * from (select rownum r, a.* from (select * from purchase where id=#{id} order by orderdate desc) a ) where r=1
	</select>
	
	<!-- 포인트 변경 -->
	<update id="updatePoint">
		update detail set point=#{resultPoint} where id=#{id}
	</update>
	<!-- 쿠폰 삭제 -->
	<delete id="deletePayCoupon">
		delete from coupon where id=#{id} and no=#{couponNo} 
	</delete>
	
<!-- Order페이지 -->
	<select id="getOrderNoDateList" resultType="java.util.HashMap">
		select t1.*,pr.imag, pr.name as name from (select o.purchaseno as num, o.stockcnt as cnt, o.sotckprice as price,o.ownernumber, p.orderdate  from orderinfo o 
		left join purchase p on o.PURCHASENO = p.PURCHASENO where p.id=#{id}) t1 left join product pr on t1.ownernumber = pr.ownernumber
	</select>
	<select id="getOrderDateList" resultType="java.util.HashMap">
		select t1.*,pr.imag, pr.name as name from (select o.purchaseno as num, o.stockcnt as cnt, o.sotckprice as price,o.ownernumber, p.orderdate  from orderinfo o 
		left join purchase p on o.PURCHASENO = p.PURCHASENO where p.id=#{id} and (p.orderdate <![CDATA[>=]]> #{edate}) and (p.orderdate <![CDATA[<=]]> #{sdate})) t1 left join product pr 
		on t1.ownernumber = pr.ownernumber
	</select>
</mapper>