<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="product">
	<!-- view 상품 상세내용 불러오기 -->
	<select id="getProductInfo" resultType="java.util.HashMap">
		SELECT P.OWNERNUMBER,P.IMAG,P.SIGNUP,P.CONTENTS,S.* FROM PRODUCT P LEFT OUTER JOIN STOCK S 
		ON P.OWNERNUMBER = S.OWNERNUMBER WHERE P.OWNERNUMBER=#{OWNERNUMBER}
	</select>
	<!-- 조회수 올리기 -->
	<update id="updateCount">
		UPDATE PRODUCT SET CNT=CNT+1 WHERE OWNERNUMBER=#{OWNERNUMBER}
	</update>
	<!-- 상품등록 -->
	<insert id="addProduct">
		INSERT INTO PRODUCT(OWNERNUMBER, NAME, IMAG, SIGNUP, CONTENTS) VALUES(#{ownernumber}, #{name}, #{imag}, SYSDATE, #{content})
	</insert>
	<!-- 문의 리스트 가져오기 -->
	<select id="getInquiryList" resultType="java.util.HashMap">
		SELECT * FROM INQUIRE WHERE OWNERNUMBER=#{OWNERNUMBER} ORDER BY NUM DESC
	</select>
	<!-- 후기 등록 -->
	<insert id="addReview" parameterType="java.util.HashMap">
		insert into review values(review_seq.nextval, #{ownernumber}, #{id}, #{writer}, #{score}, #{content}, sysdate, #{pname} )
	</insert>
	<!-- 후기 리스트 가져오기 -->
	<select id="getReviewList" resultType="java.util.HashMap">
		SELECT * FROM(SELECT ROWNUM R, A.* from(SELECT * FROM REVIEW WHERE ownernumber=#{ownernumber} ORDER BY NO DESC) A) WHERE R BETWEEN #{start} AND #{end}
	</select>
	<!-- 후기 리스트 갯수 -->
	<select id="reviewListCount" resultType="java.lang.Integer">
		select count(*) from review where ownernumber = #{ownernumber}
	</select>
	<!-- 상품 리스트 -->
	<select id="getProductList" resultType="java.util.HashMap">
<<<<<<< HEAD
		select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price, s.regist from (select ownernumber,name,imag,signup from product) t
 		left join stock s on t.ownernumber = s.ownernumber order by t.signup desc) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
	</select>	<!-- 의류리스트 -->
	<select id="getClothList" resultType="java.util.HashMap">
 		<choose>
 			<when test="option == 'signup'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='의류' order by t.signup desc) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 			<when test="option == 'priceHigh'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='의류' order by s.price desc) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 			<when test="option == 'priceLow'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='의류' order by s.price) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 			<when test="option == 'name'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='의류' order by t.name) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 		</choose>
	</select>
	<!-- 사료리스트 -->
	<select id="getFeedList" resultType="java.util.HashMap">
 		<choose>
 			<when test="option == 'signup'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='사료' order by t.signup desc) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 			<when test="option == 'priceHigh'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='사료' order by s.price desc) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 			<when test="option == 'priceLow'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='사료' order by s.price) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 			<when test="option == 'name'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='사료' order by t.name) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 		</choose>
	</select>
	<!-- 간식리스트 -->
	<select id="getSnackList" resultType="java.util.HashMap">
 		<choose>
 			<when test="option == 'signup'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='간식' order by t.signup desc) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 			<when test="option == 'priceHigh'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='간식' order by s.price desc) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 			<when test="option == 'priceLow'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='간식' order by s.price) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 			<when test="option == 'name'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='간식' order by t.name) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 		</choose>
	</select>
	<!-- 장난감리스트 -->
	<select id="getToyList" resultType="java.util.HashMap">
 		<choose>
 			<when test="option == 'signup'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='장난감' order by t.signup desc) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 			<when test="option == 'priceHigh'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='장난감' order by s.price desc) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 			<when test="option == 'priceLow'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='장난감' order by s.price) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 			<when test="option == 'name'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='장난감' order by t.name) tt) ttt where r between (#{page}-1)*12+1 and (#{page}-1)*12+12
 			</when>
 		</choose>
	</select>
	<!-- 페이지수 -->
	<select id="getProductPage" resultType="java.lang.Integer">
		<choose>
			<when test="type == 'cloth'">
				select count(*) from (select DISTINCT p.ownernumber,s.type from product p left join stock s on p.ownernumber = s.ownernumber where s.type='의류')
			</when>
			<when test="type == 'snack'">
				select count(*) from (select DISTINCT p.ownernumber,s.type from product p left join stock s on p.ownernumber = s.ownernumber where s.type='간식')
			</when>
			<when test="type == 'feed'">
				select count(*) from (select DISTINCT p.ownernumber,s.type from product p left join stock s on p.ownernumber = s.ownernumber where s.type='사료')
			</when>
			<when test="type == 'toy'">
				select count(*) from (select DISTINCT p.ownernumber,s.type from product p left join stock s on p.ownernumber = s.ownernumber where s.type='장난감')
			</when>
		</choose>
	</select>
	<!-- 상품삭제 -->
	<delete id="deleteProduct">
		delete from product where ownernumber=#{dnum}
	</delete>
<<<<<<< HEAD
	<!-- 상품 삭제시 등록 정보 수정 -->
	<update id="editRegist">
		update stock set regist='N' where ownernumber=#{dnum}
	</update>

<!-- 관리자 페이지용 -->
	<!-- 후기 리스트_관리자용 -->
	<select id="reviewList_master" resultType="java.util.HashMap"> 
		select * from(select rownum r, a.* from(select * from review order by to_char(adddate, 'yyyy-MM-dd') desc, ownernumber asc) a ) where r between #{start} and #{end}
	</select>
	<!-- 후기 리스트 총 갯수 -->
	<select id="reviewListAllCount" resultType="java.lang.Integer">
		select count(*) from review
	</select>
	<!-- 후기 리스트 삭제 -->
	<delete id="deleteReview">
		delete from review where no in 
		<foreach item="ar" index="index" collection="array" open="(" separator="," close=")">
        #{ar}
  		</foreach>
	</delete>
	<!-- 후기 리스트 검색 -->
	<select id="searchReview" resultType="java.util.HashMap">
		<choose>
			<when test="mode == 'pname'">
			select * from (select rownum r, a.* from (select * from review where pname like #{word} order by no desc) a) where r between #{start} and #{end}
			</when>
			<when test="mode == 'id'">
				select * from (select rownum r, a.* from (select * from review where id like #{word} order by no desc) a) where r between #{start} and #{end}
			</when>
			<when test="mode == 'ownernumber'">
				select * from (select rownum r, a.* from (select * from review where ownernumber like #{word} order by no desc) a) where r between #{start} and #{end}
			</when>
		</choose>
	</select>
	<!-- 검색결과갯수 -->
	<select id="searchCount" resultType="java.lang.Integer">
		<choose>
			<when test="mode=='pname'">
				select count(*) from review where pname like #{word}
			</when>
			<when test="mode=='id'">
				select count(*) from review where id like #{word}
			</when>
			<when test="mode=='ownernumber'">
				select count(*) from review where ownernumber like #{word}
			</when>		
		</choose>		
	</select>
	
	<!-- 상품 정보 가져오기 -->
	<select id="loadPInfo" resultType="java.util.HashMap">
		select * from product where ownernumber = #{ownernumber}
	</select>
	<!-- 상품 정보 수정 -->
	<update id="updateProduct">
		update product set IMAG=#{imag}, CONTENTS=#{content} where OWNERNUMBER=#{ownernumber}
	</update>
		
=======
	<!-- 홈 신상품 리스트 -->
	<select id="getNewProductList" resultType="java.util.HashMap">
		<choose>
			<when test="type == 'cloth'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='의류' order by t.signup desc) tt) ttt where r between 1 and 5
 			</when>
 			<when test="type == 'feed'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='사료' order by t.signup desc) tt) ttt where r between 1 and 5
 			</when>
 			<when test="type == 'snack'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='간식' order by t.signup desc) tt) ttt where r between 1 and 5
 			</when>
 			<when test="type == 'toy'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='장난감' order by t.signup desc) tt) ttt where r between 1 and 5
 			</when>
		</choose>
	</select>
	<!-- 홈 베스트 상품 리스트 -->
	<select id="getBestProductList" resultType="java.util.HashMap">
		<choose>
			<when test="type == 'cloth'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,t.cnt,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='의류' order by t.cnt desc) tt) ttt where r between 1 and 5
 			</when>
 			<when test="type == 'feed'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,t.cnt,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='사료' order by t.cnt desc) tt) ttt where r between 1 and 5
 			</when>
 			<when test="type == 'snack'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,t.cnt,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='간식' order by t.cnt desc) tt) ttt where r between 1 and 5
 			</when>
 			<when test="type == 'toy'">
 				select * from (select rownum as r,tt.* from (select distinct t.ownernumber,t.name,t.imag,t.signup,t.cnt,s.type,s.price from (select * from product) t
 				left join stock s on t.ownernumber = s.ownernumber where s.type='장난감' order by t.cnt desc) tt) ttt where r between 1 and 5
 			</when>
		</choose>
	</select>
>>>>>>> branch 'master' of https://github.com/sibars12/teamproject.git
</mapper>